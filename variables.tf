variable "admin_password" {
  type        = string
  description = "The admin password for the virtual machine."
}

variable "admin_username" {
  type        = string
  description = "The admin username for the virtual machine."
}

variable "nva_config_file_path" {
  type        = string
  description = "The custom data to use for the virtual machine."
  default     = ""
  nullable    = false
}

variable "image" {
  type = object({
    plan_id      = string
    publisher_id = string
    product_id   = string
    version      = optional(string, "latest")
  })
  description = "values for the image to use for the virtual machine."
}

variable "location" {
  type        = string
  description = "The location/region of the resources."
}

variable "resource_group_name" {
  type        = string
  description = "The name of the resource group."
}

variable "virtual_machine_name" {
  type        = string
  description = "The name of the virtual machine."
}

variable "virtual_network_name" {
  type        = string
  description = "The name of the virtual network."
}

variable "vm_size" {
  type        = string
  description = "The size of the virtual machine."
}

variable "identity" {
  type = object({
    type         = string
    identity_ids = optional(list(string))
  })
  default     = null
  description = "values for the identity to use for the virtual machine."
}

variable "network_interfaces" {
  type = map(object({
    accelerated_networking_enabled = optional(bool)
    name                           = optional(string)
    primary_interface              = optional(string, false)
    private_ip_address             = optional(string)
    private_ip_address_allocation  = optional(string, "Dynamic")
    public_ip_creation_enabled     = optional(bool, false)
    tags                           = optional(map(string), {})
    public_ip_config = optional(object({
      name              = optional(string)
      allocation_method = optional(string, "Dynamic")
      sku               = optional(string)
      tags              = optional(map(string), {})
    }), {})
    subnet_config = object({
      name             = optional(string)
      address_prefixes = list(string)
    })
  }))
  default     = {}
  description = "A map of network_interfaces to create."
  nullable    = false

  validation {
    condition     = length([for k, v in var.network_interfaces : v.primary_interface if v.primary_interface]) == 1
    error_message = "At least one and only one network interface can be marked as primary."
  }

  validation {
    condition     = length(var.network_interfaces) > 0
    error_message = "At least one network interface must be specified."
  }
}

variable "os_disk" {
  type = object({
    caching              = optional(string, "ReadOnly")
    storage_account_type = optional(string, "Standard_LRS")
    name                 = optional(string, null)
  })
  default     = {}
  description = "The os disk configuration to use for the virtual machine."
  nullable    = false
}

variable "tags" {
  type        = map(string)
  default     = {}
  description = "A mapping of tags to assign to the resource."
}

# tflint-ignore: terraform_unused_declarations
variable "tracing_tags_enabled" {
  type        = bool
  default     = false
  description = "Whether enable tracing tags that generated by BridgeCrew Yor."
  nullable    = false
}

# tflint-ignore: terraform_unused_declarations
variable "tracing_tags_prefix" {
  type        = string
  default     = "avm_"
  description = "Default prefix for generated tracing tags"
  nullable    = false
}
